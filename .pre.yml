name: ce-connector-ditto
jobs:
  - name: build-{{.PR}}
    node: build
    triggers:
      githubHook: true
    bindings:
      - type: string
        credentialID: DOCKER_PASSWORD
        variable: DOCKER_PASSWORD
    commands:
      - docker login -u lokalise -p ${DOCKER_PASSWORD} reg.lokalise.work
      - docker build -f docker/Dockerfile -t 053497547689.dkr.ecr.eu-central-1.amazonaws.com/ce-connector-ditto/app:PRE-{{.PR}} -t reg.lokalise.work/ce-connector-ditto/app:PRE-{{.PR}} .
      - docker push reg.lokalise.work/ce-connector-ditto/app:PRE-{{.PR}}
      - docker push 053497547689.dkr.ecr.eu-central-1.amazonaws.com/ce-connector-ditto/app:PRE-{{.PR}}

  - name: deploy-{{.PR}}
    node: ditto-{{.PR}}
    instance:
      size: small
      health:
        port: 80
        statusCode: 200
        path: /health
    triggers:
      upstream: build-{{.PR}}
    bindings:
      - type: string
        credentialID: DOCKER_PASSWORD
        variable: DOCKER_PASSWORD
    commands:
      - cp docker/.env.default .env
      - docker login -u lokalise -p ${DOCKER_PASSWORD} reg.lokalise.work
      - TAG=PRE-{{.PR}} docker-compose -f docker/docker-compose.yml -f docker/docker-compose.override.pre.yml pull
      - TAG=PRE-{{.PR}} docker-compose -f docker/docker-compose.yml -f docker/docker-compose.override.pre.yml up -d

  {{ if eq .PR "main"}}
  - name: release
    noAgent: true
    triggers:
      upstream: deploy-main
    pipeline: |
      node("build") {
        git(branch: 'main', credentialsId: 'lokalise-engineering', url: 'git@github.com:lokalise/ce-connector-ditto.git')
        properties([
          [$class: 'BuildBlockerProperty', useBuildBlocker: false],
          disableConcurrentBuilds(),
        ])

        echo "Release started..."

        stage("Create a git tag") {
          withCredentials([
            string(credentialsId: 'GH_TOKEN', variable: 'GITHUB_TOKEN'),
            string(credentialsId: 'DOCKER_PASSWORD', variable: 'REGISTRY_PASSWORD')
          ]) {
            sh '''
              docker/scripts/release.sh git_tag $(git rev-parse HEAD)
            '''
          }
        }
      }
  {{ end }}
